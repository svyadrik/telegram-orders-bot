import os
import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    Application,
    ApplicationBuilder,
    ContextTypes,
    CallbackQueryHandler,
    MessageHandler,
    CommandHandler,
    filters,
    ChannelPostHandler
)

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–Ω–æ–ø–∫–∞ –ø–æ–¥ –∫–∞–∂–¥—ã–º –ø–æ—Å—Ç–æ–º
async def channel_post_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.channel_post and update.channel_post.text:
        keyboard = [[InlineKeyboardButton("üõí –ó–∞–º–æ–≤–∏—Ç–∏", callback_data="order")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        try:
            await context.bot.edit_message_reply_markup(
                chat_id=update.channel_post.chat_id,
                message_id=update.channel_post.message_id,
                reply_markup=reply_markup
            )
        except Exception as e:
            logging.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –¥–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É: {e}")

# –û—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
async def order_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text("–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É:")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–ë–ï–ó asyncio.run)
def main():
    application = ApplicationBuilder().token(os.getenv("BOT_TOKEN")).build()

    application.add_handler(ChannelPostHandler(channel_post_handler))
    application.add_handler(CallbackQueryHandler(order_handler, pattern="^order$"))
    application.add_handler(CommandHandler("start", lambda update, context: update.message.reply_text("–ë–æ—Ç –ø—Ä–∞—Ü—é—î!")))

    webhook_url = os.getenv("WEBHOOK_URL")

    # –ó–∞–ø—É—Å–∫–∞–µ–º Webhook
    application.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 10000)),
        webhook_url=webhook_url
    )

if __name__ == '__main__':
    main()
